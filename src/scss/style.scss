@use 'sass:math';

/* ================= Connect Mixins ================= */

@import 'base/mixins';

/* ================= Fonts ================= */

//&display=swap - add to the font url if google fonts are connected via VSCode plugin

// Connect local fonts if any
@import 'fonts/fonts';

// Connect fontawesome
@import "fonts/fontawesome/fontawesome";
@import "fonts/fontawesome/solid";
@import "fonts/fontawesome/brands";

/* ================= Icon Font ================= */

// Connect icon font if any
//@import "fonts/icons";

/* ================= Default Font ================= */

$fontFamily: 'Montserrat';
$fontSize: rem(16); // 16 - default font size

// Colors
$mainColor: rgba(31, 32, 65, 0.75); // default color
$white: rgb(255, 255, 255);
$black: rgb(0, 0, 0);

$dark-shade: rgb(31, 32, 65);
$gray-1: rgba(222, 222, 227, 1);
$purple: rgba(188, 156, 255, 1);
$green: rgba(111, 207, 151, 1);

$gradientPurple: linear-gradient(180deg, #bc9cff 0%, #8ba4f9 100%);
$gradientPurple025: linear-gradient(180deg, rgba(188, 156, 255, 0.25) 0%, rgba(139, 164, 249, 0.25) 100%);
$gradientGreen: linear-gradient(180deg, #6FCF97 0%, #66D2EA 100%);
$gradientYellow: linear-gradient(180deg, #FFE39C 0%, #FFBA9C 100%);
$gradientBlack: linear-gradient(180deg, #919191 0%, #3D4975 100%);

// Transition Styles
$Transition: 0.2s ease-in;

// SVG Graphics
$checkIcon: url("../img/svg/check.svg");

// Backgrounds
$homeBG: url("../img/background/home.jpg");
$registerBG: url("../img/background/register.jpg");

/* ================= General Settings ================= */

// Min page width
$minWidth: 320;
// Max page width
$maxWidth: 1920;
// Width of the content container. If set to 0, container will have no max width.
$maxWidthContainer: 1170;
// Side padding of the container
// 30 / 2 = 15px on both sides
$containerPadding: 30;

$containerWidth: $maxWidthContainer + $containerPadding;

// Breakpoints
$pc: em($containerWidth); // PC, Landscape Tablet
$tablet: em(991.98); // Tablet, landscape phones
$mobile: em(767.98); // Phone L
$mobileSmall: em(479.98); // Phone S

// Responsiveness type:
// 1 - Responsive all the time
// 2 - Responsive according to the breakpoints i.e. the container changes its width at breakpoints
$responsiveType: 1;

/* ================= General styles and reset ================= */

@import 'base/null';

body {
  background: white;
  overflow-x: hidden;
  // Scroll is locked
  .lock & {
    overflow: hidden;
    touch-action: none;
  }
  // Page has been loaded
  .loaded & {
    display: block;
  }
}

/* ================= Custom Highlight Color ================= */

::selection {
  background: rgba($dark-shade, 0.15);
}

/* ================= Custom Scrollbar ================= */

body::-webkit-scrollbar-track {
  box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.15);
  background-color: #ffb64800;
}

body::-webkit-scrollbar {
  width: 8px;
  background: rgba(255, 255, 255, 0.904);
}

body::-webkit-scrollbar-thumb {
  border: none;
  border-radius: 25px;
  background: $purple;
}

/* ================= Page Wrapper ================= */

.wrapper {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  // Прижимаем footer
  > main {
    flex: 1 1 auto;
  }
  // Фикс для слайдеров
  > * {
    min-width: 0;
  }
}

/*
This will be applied to all elements with class *__container. E.g. header__container. 
*/
@if ($responsiveType==1) {
  // Responsive
  [class*='__container'] {
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
      margin: 0 auto;
    }
    @if ($containerPadding>0) {
      padding: 0 rem(math.div($containerPadding, 2));
    }
  }
} @else {
  // According to breakpoints
  [class*='__container'] {
    margin: 0 auto;
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
    } @else {
      @if ($containerPadding>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
    @media (max-width: $pc) {
      max-width: rem(970);
    }
    @media (max-width: $tablet) {
      max-width: rem(750);
    }
    @media (max-width: $mobile) {
      max-width: none;
      @if ($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
  }
}

// Connect base styles, templates and auxiliary classes

@import 'base';
@import 'animations';

// Connect common styles and libs
@import 'common';
@import 'libs/datepicker.scss';

// Connect page styles
@import "pages/ui-kit";
@import "pages/home";
@import "pages/register";
@import "pages/login";
@import "pages/rooms";
@import "pages/room";


/* ================= Connect BEM modules ================= */

// Connect UI/FORM BEM modules

@import '../modules/forms/subscribe/subscribe';
@import '../modules/forms/date-dropdown/date-dropdown';
@import '../modules/forms/dropdown/dropdown';
@import '../modules/forms/submit-btn/submit-btn';
@import '../modules/forms/radio-btn/radio-btn';
@import '../modules/forms/toggle/toggle';
@import '../modules/forms/filter-date/filter-date';
@import '../modules/forms/range-slider/range-slider';
@import '../modules/forms/checkbox-btn/checkbox-btn';
@import '../modules/forms/rich-checkbox/rich-checkbox';
@import '../modules/forms/checkbox-list/checkbox-list';
@import "../modules/ui/star-rating/star-rating";
@import "../modules/ui/like-btn/like-btn";

// Connect Card styles

@import "../modules/cards/register-card/register-card";
@import "../modules/cards/login-card/login-card";
@import "../modules/cards/find-room-card/find-room-card";
@import "../modules/cards/room-card/room-card";
@import "../modules/cards/book-card/book-card";

// Connect common block styles 

@import "../modules/common/room-number/room-number";
@import "../modules/common/room-price/room-price";
@import "../modules/ui/pagination/pagination";
@import "../modules/common/room-feature/room-feature";
@import "../modules/common/room-review/room-review";
@import "../modules/common/pie-chart/pie-chart";
@import '../modules/common/logo/logo';
@import '../modules/common/header/header';
@import '../modules/common/footer/footer';









